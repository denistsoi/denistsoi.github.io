import{f as n,e as s,s as a}from"./common-67d8f095.js";const t='{"title":"Everything is an object in Javascript","frontmatter":{"prev":"/en/","next":false,"sidebar":"auto","layout":"detail"},"headers":[{"level":2,"title":"Objects","slug":"objects"},{"level":3,"title":"Data Types (Objects)","slug":"data-types-objects"},{"level":3,"title":"When to use arrays over objects","slug":"when-to-use-arrays-over-objects"},{"level":3,"title":"Objects - dot notation","slug":"objects-dot-notation"},{"level":2,"title":"OOP in Javascript","slug":"oop-in-javascript"},{"level":3,"title":"Prototype","slug":"prototype"},{"level":2,"title":"Task","slug":"task"},{"level":2,"title":"homework","slug":"homework"}],"lastUpdated":1591831922650.9075}';var o={};const p=a('<h1 id="everything-is-an-object-in-javascript"><a class="header-anchor" href="#everything-is-an-object-in-javascript" aria-hidden="true">#</a> Everything is an object in Javascript</h1><h2 id="objects"><a class="header-anchor" href="#objects" aria-hidden="true">#</a> Objects</h2><h3 id="data-types-objects"><a class="header-anchor" href="#data-types-objects" aria-hidden="true">#</a> Data Types (Objects)</h3><div class="language-js"><pre><code><span class="token keyword">var</span> something <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p>an object is a dictionary / hashtable</p><p>an object can store any standard data, including arrays and other objects</p><div class="language-js"><pre><code><span class="token keyword">var</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span>\n\tstr<span class="token operator">:</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span>\n\tnone<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n\tnum<span class="token operator">:</span> <span class="token number">54.3</span><span class="token punctuation">,</span>\n\tbool<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myObj<span class="token punctuation">[</span><span class="token string">&quot;str&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints Hello</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myObj<span class="token punctuation">[</span><span class="token string">&quot;none&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints undefined</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myObj<span class="token punctuation">[</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints 54.3</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myObj<span class="token punctuation">[</span><span class="token string">&quot;bool&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints true</span>\n</code></pre></div><hr><h3 id="when-to-use-arrays-over-objects"><a class="header-anchor" href="#when-to-use-arrays-over-objects" aria-hidden="true">#</a> When to use arrays over objects</h3><p>arrays have natural orders (0,1,2...)<br> objects have a key/name that you want to use as an index to store a collection of items</p><h3 id="objects-dot-notation"><a class="header-anchor" href="#objects-dot-notation" aria-hidden="true">#</a> Objects - dot notation</h3><div class="language-js"><pre><code><span class="token keyword">var</span> fruit1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nfruit1<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Apple&quot;</span><span class="token punctuation">;</span>\nfruit1<span class="token punctuation">[</span><span class="token string">&quot;qty&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\nfruit1<span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\nfruit1<span class="token punctuation">.</span>name <span class="token operator">===</span> fruit1<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Apple&#39;</span>\n\n<span class="token comment">// note: if there is a space in the key,</span>\n<span class="token comment">//   dot-notation may not be appropriate</span>\n</code></pre></div><hr><h2 id="oop-in-javascript"><a class="header-anchor" href="#oop-in-javascript" aria-hidden="true">#</a> OOP in Javascript</h2><h3 id="prototype"><a class="header-anchor" href="#prototype" aria-hidden="true">#</a> Prototype</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> params<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n\t<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> params<span class="token punctuation">.</span>age<span class="token punctuation">;</span>\n\t<span class="token keyword">this</span><span class="token punctuation">.</span>likes <span class="token operator">=</span> params<span class="token punctuation">.</span>likes <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> greet <span class="token operator">=</span> <span class="token string">&quot;Hi my name is &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>greet<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> Denis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tname<span class="token operator">:</span> <span class="token string">&quot;Denis&quot;</span><span class="token punctuation">,</span>\n\tage<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n\tlikes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;computers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;books&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Denis<span class="token punctuation">)</span><span class="token punctuation">;</span>\nDenis<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="tip custom-block"><p class="custom-block-title">Extra Reading - Prototypical Extend</p><ul><li><a href="./extras/Prototype-Inheritence.html">Extends/Inheritence</a></li></ul></div><div class="tip custom-block"><p class="custom-block-title">Extra Reading - Classes</p><ul><li><a href="./extras/Classes.html">Classes</a></li></ul></div><div class="warning custom-block"><p class="custom-block-title">Extra Reading -</p><ul><li><a href="./extras/Call-Apply-Bind.html">JS Extra</a></li></ul></div><h2 id="task"><a class="header-anchor" href="#task" aria-hidden="true">#</a> Task</h2><p><img src="http://d2vlcm61l7u1fs.cloudfront.net/media%2F3cb%2F3cbf459b-a521-46d3-95f2-520a8573d11f%2FphpzePNil.png" alt="screenshot"></p><ul><li><a href="https://codepen.io/denistsoi/pen/ELvyoo" target="_blank" rel="noopener noreferrer">reference</a></li></ul><h2 id="homework"><a class="header-anchor" href="#homework" aria-hidden="true">#</a> homework</h2><ul><li><a href="./challange.html">setup</a></li></ul>',24);o.render=function(a,t){return s(),n("div",null,[p])};export default o;export{t as __pageData};
