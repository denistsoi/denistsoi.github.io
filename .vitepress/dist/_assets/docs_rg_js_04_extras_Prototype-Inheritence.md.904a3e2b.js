import{f as n,e as s,s as a}from"./common-67d8f095.js";const t='{"title":"Extends / Inheritence","frontmatter":{},"headers":[{"level":3,"title":"Extends / Inheritence","slug":"extends-inheritence"},{"level":3,"title":"Extending prototype","slug":"extending-prototype"}],"lastUpdated":1591831922650.7122}';var p={};const o=a('<h3 id="extends-inheritence"><a class="header-anchor" href="#extends-inheritence" aria-hidden="true">#</a> Extends / Inheritence</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name  <span class="token operator">=</span> params<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>age   <span class="token operator">=</span> params<span class="token punctuation">.</span>age<span class="token punctuation">;</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>likes <span class="token operator">=</span> params<span class="token punctuation">.</span>likes <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> greet <span class="token operator">=</span> <span class="token string">&#39;Hi my name is &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>greet<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre></div><h3 id="extending-prototype"><a class="header-anchor" href="#extending-prototype" aria-hidden="true">#</a> Extending prototype</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Programmer</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">Person</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;== here is where programmer inherits from Person</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>languages <span class="token operator">=</span> params<span class="token punctuation">.</span>languages<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Programmer</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> Denis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Programmer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> \n  name<span class="token operator">:</span> <span class="token string">&quot;Denis&quot;</span><span class="token punctuation">,</span> \n  age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> \n  likes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;computers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;books&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  languages<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nDenis<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Denis<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',4);p.render=function(a,t){return s(),n("div",null,[o])};export default p;export{t as __pageData};
